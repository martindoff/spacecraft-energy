%% Energy management, single shot, final

close all; clear all; clc; 

%% Numerical parameters 
integrator = 1; %1: Euler, 2: RK4
d = 200; %step 
n=2; % number of turns around Earth
h = 24*n; % number of hours 
H = 3600*h; % horizon
T = 3600*h/n; % period
L = floor(H/d);
L_local = round(L/n*1); % local horizon
t_step=0:d:H-d; % time vector
t =  t_step'; % t in seconds 


%% Initialise parameters 
param_init; 

%% Dynamics
simOut = sim('satellite', 'StopTime', num2str(H), 'RelTol','1e-6', 'Solver','ode23t');

%% Solar panel
nu = interp1(simOut.nu_sim.Time, simOut.nu_sim.Data, t, 'pchip');
cos_phi_s = interp1(simOut.cos_phi_s.Time, simOut.cos_phi_s.Data, t, 'pchip');
T_SA = getTemperature(t, nu, T_0_SA, th_SA, cos_phi_s);
[I_ds, I_L, V_t]  = getSolarArrayParameters(T_SA, AU, nu, param); 
I_L = I_L.*abs(cos_phi_s); 

%PPT solar panel 
x= (I_L./ I_ds + 1)*exp(1);
V_x = W_analytic(x) -1.0;
%V_x(V_x>=76.1)=76.1;
V_d = V_x.*V_t;
I_s = I_L - I_ds.*(exp(V_x)-1.0); 
%I_s(I_s>=265.5)=265.5;

% T_surface
T_surface = 100 +273.15;
t_0 = T_surface; 
%T_surface = getTemperature(t, nu, t_0, th_surface, 1); 
T_surface = getTemperature2(t, nu, t_0, th_surface, 1);

%% Reaction wheels
g_w= interp1(simOut.g_w.Time, simOut.g_w.Data, t); % wheel torque
omega_w = interp1(simOut.omega_w.Time, simOut.omega_w.Data, t); % wheel rotation speed 
F= interp1(simOut.f.Time, simOut.f.Data, t); % control force 

for i=1:length(g_w)
P_DC(i,1) = g_w(i,:)*omega_w(i,:)'; % mechanical power to be generated by the wheels 
losses(i,1) = g_w(i,:)*g_w(i,:)'; 
end 
I_a = sum(abs(g_w),2) / k_a; % abs since negative couple yields positive current ?
P_a = R_a/k_a^2*losses + k_w/k_a * P_DC ; % electrical input power to the wheels 

%% Thrusters (HET) 
I_HET = zeros(length(F),1);
for i=1:length(F)
T_HET = abs(F(i,:)'); % torque HET 
I_HET(i,1) = sum(T_HET)/eta_HET*sqrt(q_HET/(2*M_HET*V_HET)); % HET current
end 
P_HET = I_HET*V_HET; % HET power

%% Optimisation
%cvx_sat_MPC;  % MPC (closed-loop)
cvx_sat_open_loop;  % single shot